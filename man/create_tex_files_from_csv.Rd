% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_tex_files_from_csv.R
\name{create_tex_files_from_csv}
\alias{create_tex_files_from_csv}
\title{Create .tex file(s) from a .csv file of specifications}
\usage{
create_tex_files_from_csv(file_name, save_here_instead = NULL)
}
\arguments{
\item{file_name}{A path to the file that stores the table information. The
path can be relative to the current working directory, just the file name
without any directories if it is in the current working directory, or a
full file path starting with the drive. The extension of this path must
end in \code{".csv"} because only comma separated values can be read in by this
function. Additionally, the file must contain the following headers:
\itemize{
\item caption,
\item altcaption (optional and currently unused),
\item label,
\item filename, and
\item loc (optional if you pass the full file name in the previous column).
}}

\item{save_location}{A path to a directory where you want the output saved.
The path can be relative to your current location or an absolute path. If
\code{NULL}, which is the default, then the results of this function will be
saved in the same directory as \code{file_name}. In this case, if the path
given for \code{filename} is just the file and does not include the directory,
then the result will be \code{"."}, which references the current working
directory, and will be valid.}
}
\value{
A data frame is returned with the following eight columns:
\itemize{
\item \code{caption}: a character column containing the captions,
\item \code{altcaption}: \code{NA}
\item \code{label}: a character column containing the LaTeX labels for referencing
table in the document,
\item \code{filename}: a character column containing the basename of the file path,
\item \code{loc}: a character column containing the file paths to \code{filename},
\item \code{full_location}: a character column containing the full file path to
\code{filename},
\item \code{x}: a list column containing one data frame per row of the data used to
create the table, and
\item \code{tex}: a list column containing output from \code{\link[kableExtra:reexports]{kableExtra::kable()}} for each
table. The table specifications stored in this column are used
internally to create .tex file(s) that are saved either in the same
directory that \code{file_name} is located in or in the directory specified
by \code{save_here_instead}.
}
}
\description{
First, a .csv file is read in that contains a set of table specifications
per row. Second, each set of specifications is passed to
\code{\link[kableExtra:reexports]{kableExtra::kable()}} to create .tex file(s). Third,
\code{\link[kableExtra:save_kable]{kableExtra::save_kable()}} is used to save each table. All of the relevant
information is returned in a data frame.
}
\details{
\subsection{Formatting}{
\subsection{Decimal places}{

Decimals are removed from all columns containing integer values with four
digits because they are presumed to represent a year. Decimals by default
are followed by two digits. If any value in a column is 0.00 after rounding
to two digits, additional digits are added on until the entry of interest
no longer equals zero and then all values within that row are formatted to
have the same number of digits as the "small" value. The previous algorithm
is limited to 10 digits.
}

\subsection{Alignment}{

All character columns are left aligned and all numeric columns are right
aligned.
}

}

\subsection{Future development}{
\itemize{
\item The automatic determination of how many decimal points a column is
formatted to could use some work. Currently, there is no help for
scientific notation or how to mix scientific notation with fixed values.
\item How wide a column is printed is automated within \code{\link[kableExtra:reexports]{kableExtra::kable()}} but
could potentially be defined using a helper function but that would need
to be written.
}
}
}
\author{
Kelli F. Johnson
}
